var palettes = require('users/gena/packages:palettes');
var classVis = {palette: palettes.cmocean.Speed[7].slice(0,-2)}
var aoi = ee.FeatureCollection("FAO/GAUL/2015/level0")
    .filter(ee.Filter.eq('ADM0_NAME', 'Senegal'));
Map.centerObject(aoi, 7);

var copernicus = ee.ImageCollection("COPERNICUS/Landcover/100m/Proba-V-C3/Global")
        .select("discrete_classification")
        .filterDate("2019-01-01", "2019-12-31").filterBounds(aoi).mosaic().clip(aoi);
copernicus = copernicus.eq(40).rename('crop')
Map.addLayer(copernicus, classVis, 'Cropland from copernicus');


var worldcover_v100 = ee.ImageCollection("ESA/WorldCover/v100").filterBounds(aoi).mosaic().clip(aoi);
worldcover_v100 = worldcover_v100.eq(40).rename('crop')
Map.addLayer(worldcover_v100, classVis, 'Cropland from worldcover-v100');


var worldcover_v200 = ee.ImageCollection("ESA/WorldCover/v200").filterBounds(aoi).mosaic().clip(aoi);
worldcover_v200 = worldcover_v200.eq(40).rename('crop')
Map.addLayer(worldcover_v200, classVis, 'Cropland from worldcover-v200');


var worldcereal_v100 = ee.ImageCollection(
            ee.ImageCollection("ESA/WorldCereal/2021/MODELS/v100")
            .filter('product == "temporarycrops"')
            .select("classification")
            .mosaic()
        ).filterBounds(aoi).mosaic().clip(aoi);
worldcereal_v100 = worldcereal_v100.eq(100).rename('crop')
Map.addLayer(worldcereal_v100, classVis, 'Cropland from worldcereal-v100');


var glad = ee.ImageCollection("users/potapovpeter/Global_cropland_2019").filterBounds(aoi).mosaic().clip(aoi);
glad = glad.gte(0.5).rename('crop')
Map.addLayer(glad, classVis, 'Cropland from glad');


var asap = ee.ImageCollection(ee.Image("users/sbaber/asap_mask_crop_v03").unmask()).filterBounds(aoi).mosaic().clip(aoi);
asap = asap.gte(100).rename('crop')
Map.addLayer(asap, classVis, 'Cropland from asap');


var dynamicworld = ee.ImageCollection(
            ee.ImageCollection("GOOGLE/DYNAMICWORLD/V1")
            .filter(ee.Filter.date("2019-01-01", "2020-01-01"))
            .select(["label"])
            .mode()
        ).filterBounds(aoi).mosaic().clip(aoi);
dynamicworld = dynamicworld.eq(4).rename('crop')
Map.addLayer(dynamicworld, classVis, 'Cropland from dynamicworld');


var gfsad_gcep = ee.ImageCollection("projects/sat-io/open-datasets/GFSAD/GCEP30").filterBounds(aoi).mosaic().clip(aoi);
gfsad_gcep = gfsad_gcep.eq(2).rename('crop')
Map.addLayer(gfsad_gcep, classVis, 'Cropland from gfsad-gcep');


var gfsad_lgrip = ee.ImageCollection("projects/sat-io/open-datasets/GFSAD/LGRIP30").filterBounds(aoi).mosaic().clip(aoi);
gfsad_lgrip = gfsad_lgrip.eq(2).or(gfsad_lgrip.eq(3)).rename('crop')
Map.addLayer(gfsad_lgrip, classVis, 'Cropland from gfsad-lgrip');


var digital_earth_africa = ee.ImageCollection("projects/sat-io/open-datasets/DEAF/CROPLAND-EXTENT/filtered").filterBounds(aoi).mosaic().clip(aoi);
digital_earth_africa = digital_earth_africa.eq(1).rename('crop')
Map.addLayer(digital_earth_africa, classVis, 'Cropland from digital-earth-africa');


var esa_cci_africa = ee.ImageCollection(
            ee.Image("projects/sat-io/open-datasets/ESA/ESACCI-LC-L4-LC10-Map-20m-P1Y-2016-v10")
        ).filterBounds(aoi).mosaic().clip(aoi);
esa_cci_africa = esa_cci_africa.eq(4).rename('crop')
Map.addLayer(esa_cci_africa, classVis, 'Cropland from esa-cci-africa');


var globcover_v23 = ee.ImageCollection(
            ee.Image("projects/sat-io/open-datasets/ESA/GLOBCOVER_L4_200901_200912_V23")
        ).filterBounds(aoi).mosaic().clip(aoi);
globcover_v23 = globcover_v23.eq(11).or(globcover_v23.eq(14)).or(globcover_v23.eq(20)).or(globcover_v23.eq(30)).rename('crop')
Map.addLayer(globcover_v23, classVis, 'Cropland from globcover-v23');


var globcover_v22 = ee.ImageCollection(
            ee.Image("projects/sat-io/open-datasets/ESA/GLOBCOVER_200412_200606_V22_Global_CLA")
        ).filterBounds(aoi).mosaic().clip(aoi);
globcover_v22 = globcover_v22.eq(11).or(globcover_v22.eq(14)).or(globcover_v22.eq(20)).or(globcover_v22.eq(30)).rename('crop')
Map.addLayer(globcover_v22, classVis, 'Cropland from globcover-v22');


var esri_lulc = ee.ImageCollection(
            "projects/sat-io/open-datasets/landcover/ESRI_Global-LULC_10m_TS"
        ).filter(ee.Filter.date("2019-01-01", "2020-01-01")).filterBounds(aoi).mosaic().clip(aoi);
esri_lulc = esri_lulc.eq(5).rename('crop')
Map.addLayer(esri_lulc, classVis, 'Cropland from esri-lulc');


var nabil_etal_2021 = ee.ImageCollection.fromImages(
            [ee.Image("projects/sat-io/open-datasets/landcover/AF_Cropland_mask_30m_2016_v3")]
        ).filterBounds(aoi).mosaic().clip(aoi);
nabil_etal_2021 = nabil_etal_2021.eq(2).rename('crop')
Map.addLayer(nabil_etal_2021, classVis, 'Cropland from nabil-etal-2021');



var geom = aoi.geometry()
var geom_area = geom.area()

function printArea(image, name){
  var percentage = image.select(['crop'])
    .multiply(ee.Image.pixelArea().divide(geom_area))
    .reduceRegion({reducer: ee.Reducer.sum(), geometry: geom, scale: 1000, maxPixels: 1e10});
  print("Crop % " + name + ": " + percentage.get('crop').getInfo())
}

printArea(copernicus, 'copernicus')
printArea(worldcover_v100, 'worldcover-v100')
printArea(worldcover_v200, 'worldcover-v200')
printArea(worldcereal_v100, 'worldcereal-v100')
printArea(glad, 'glad')
printArea(asap, 'asap')
printArea(dynamicworld, 'dynamicworld')
printArea(gfsad_gcep, 'gfsad-gcep')
printArea(gfsad_lgrip, 'gfsad-lgrip')
printArea(digital_earth_africa, 'digital-earth-africa')
printArea(esa_cci_africa, 'esa-cci-africa')
printArea(globcover_v23, 'globcover-v23')
printArea(globcover_v22, 'globcover-v22')
printArea(esri_lulc, 'esri-lulc')
printArea(nabil_etal_2021, 'nabil-etal-2021')
